// <auto-generated />
using System;
using Industrial.Infra.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Industrial.Infra.Database.Migrations
{
    [DbContext(typeof(EfCoreContext))]
    partial class EfCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "latin1");

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ItemID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ItemId")
                        .HasName("PRIMARY");

                    b.ToTable("kg_item", (string)null);
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgJob", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<long>("JobUniqueId")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("JobUniqueID");

                    b.HasKey("JobId")
                        .HasName("PRIMARY");

                    b.ToTable("kg_job", (string)null);
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgLocation", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("LocationID");

                    b.Property<string>("LoadStatus")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.HasKey("LocationId")
                        .HasName("PRIMARY");

                    b.ToTable("kg_location", (string)null);
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgNow", b =>
                {
                    b.Property<int>("ContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ContainerID");

                    b.Property<DateTime>("EnterTime")
                        .HasColumnType("datetime");

                    b.Property<int>("LocationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("LocationID");

                    b.HasKey("ContainerId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "LocationId" }, "IX_KG_Now_LocationID");

                    b.ToTable("kg_now", (string)null);
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgNowme", b =>
                {
                    b.Property<int>("ContainerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("ContainerID");

                    b.Property<int>("ItemId")
                        .HasColumnType("int(11)")
                        .HasColumnName("ItemID");

                    b.Property<int>("Qty")
                        .HasColumnType("int(11)");

                    b.HasKey("ContainerId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ItemId" }, "IX_KG_NowMes_ItemID");

                    b.ToTable("kg_nowmes", (string)null);
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgNow", b =>
                {
                    b.HasOne("Industrial.Infra.Database.Models.KgLocation", "Location")
                        .WithMany("KgNows")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_KG_Now_KG_Location_LocationID");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgNowme", b =>
                {
                    b.HasOne("Industrial.Infra.Database.Models.KgNow", "Container")
                        .WithOne("KgNowme")
                        .HasForeignKey("Industrial.Infra.Database.Models.KgNowme", "ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_KG_NowMes_KG_Now_ContainerID");

                    b.HasOne("Industrial.Infra.Database.Models.KgItem", "Item")
                        .WithMany("KgNowmes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_KG_NowMes_KG_Item_ItemID");

                    b.Navigation("Container");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgItem", b =>
                {
                    b.Navigation("KgNowmes");
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgLocation", b =>
                {
                    b.Navigation("KgNows");
                });

            modelBuilder.Entity("Industrial.Infra.Database.Models.KgNow", b =>
                {
                    b.Navigation("KgNowme");
                });
#pragma warning restore 612, 618
        }
    }
}
