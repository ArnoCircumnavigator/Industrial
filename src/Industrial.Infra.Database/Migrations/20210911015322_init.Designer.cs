// <auto-generated />
using System;
using Industrial.Infra.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Industrial.Infra.Database.Migrations
{
    [DbContext(typeof(BusinessDbContext))]
    [Migration("20210911015322_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Industrial.Infra.Database.BusinessEntity.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ItemID");

                    b.ToTable("KG_Item");
                });

            modelBuilder.Entity("Industrial.Infra.Database.BusinessEntity.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("JobUniqueID")
                        .HasColumnType("bigint");

                    b.HasKey("JobId");

                    b.ToTable("KG_Job");
                });

            modelBuilder.Entity("Industrial.Infra.Database.BusinessEntity.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoadStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("LocationID");

                    b.ToTable("KG_Location");
                });

            modelBuilder.Entity("Industrial.Infra.Database.BusinessEntity.Now", b =>
                {
                    b.Property<int>("ContainerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EnterTime")
                        .HasColumnType("datetime");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.HasKey("ContainerID");

                    b.HasIndex("LocationID");

                    b.ToTable("KG_Now");
                });

            modelBuilder.Entity("Industrial.Infra.Database.BusinessEntity.NowMes", b =>
                {
                    b.Property<int>("ContainerID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("ContainerID");

                    b.HasIndex("ItemID");

                    b.ToTable("KG_NowMes");
                });

            modelBuilder.Entity("Industrial.Infra.Database.BusinessEntity.Now", b =>
                {
                    b.HasOne("Industrial.Infra.Database.BusinessEntity.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Industrial.Infra.Database.BusinessEntity.NowMes", b =>
                {
                    b.HasOne("Industrial.Infra.Database.BusinessEntity.Now", "Now")
                        .WithOne("NowMes")
                        .HasForeignKey("Industrial.Infra.Database.BusinessEntity.NowMes", "ContainerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Industrial.Infra.Database.BusinessEntity.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Now");
                });

            modelBuilder.Entity("Industrial.Infra.Database.BusinessEntity.Now", b =>
                {
                    b.Navigation("NowMes");
                });
#pragma warning restore 612, 618
        }
    }
}
